import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { useEffect, useState } from "react";

export default function Home() {
    const [data, setData] = useState([]);
    const [loading, setLoading] = useState(false);
    const [todo, setTodo] = useState("");
    let changeHandler = (event) => {
        setTodo(event.target.value)
    }

    let addTodo = (event) => {
        setLoading(true)
        event.preventDefault();
        fetch('/api/add?todo=' + todo)
            .then(res => res.json())
            .then(_ => {
                loadTodos()
            })
    }

    let removeTodo = (rtodo) => {
        setLoading(true)
        fetch('/api/remove?todo=' + rtodo)
            .then(res => res.json())
            .then(_ => {
                loadTodos()
            })
    }

    let loadTodos = () => {
        fetch('/api/list')
            .then(res => res.json())
            .then(data => {
                setData(data)
                setLoading(false)
            })
    }

    useEffect(() => {
        setLoading(true)
        loadTodos()
    }, [])

    if (!data) return "Loading...";
    return (
        <div className={styles.container}>
            <Head>
                <title>Next.js TODO APP</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <div className={styles.grid}>

                    <a className="top-cta" href="https://www.runforesight.com/blog/next-js-playwright-github-actions-boilerplate">Learn how to use this boilerplate</a>
                    <h1 className={styles.title}>
                        TODO App with <a href="https://blog.upstash.com/nextjs-todo">Next.js!</a>
                        <br />
                        <br />
                    </h1>
                    <br />
                    {
                        loading ?
                            <span className={styles.loading}>
                                <img src="/loader.gif" />
                            </span>
                            :
                            <form className={styles.cardForm} onSubmit={addTodo}>
                                <input className={styles.cardInput} id="todo" type="text"
                                    name="todo" onChange={changeHandler}
                                    autoComplete="off"
                                    placeholder="Enter your exciting TODO item!" />
                            </form>
                    }

                    {
                        data !== [] ?
                            data.map((item, index) =>
                                <a key={index} href="#" onClick={() => removeTodo(item)} className={styles.card}>
                                    <p>{decodeURIComponent(item)}</p>
                                </a>)
                            :
                            <br />
                    }
                </div>
            </main >

            <footer className={styles.footer}>
                <a
                    href="https://www.runforesight.com/blog"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
                        <Image src="/logo.png" alt="Upstash Logo" width={87} height={25} />
                        &amp;
                        <Image src="/foresight-logo.svg" alt="Foresight Logo" width={87} height={25} />
                    </span>
                </a>
            </footer>
        </div >
    )
}
